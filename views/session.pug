extends layout

block content
    .session-container
        #session-title
            h2#session-name-display= session.name
            //- NEW: Status badge to show if the session is active or inactive
            if session.is_active
                span.status-badge.status-verified Active
            else
                span.status-badge.status-used Inactive
        #session-date-container
            span#session-date-display(data-timestamp=session.created_at)

        //- Grid to display session stats
        .stats-grid
            .stat-card
                h3 Session Total Rage
                p.rage-score= stats.totalRage
            .stat-card
                h3 Deaths This Session
                p.rage-score= stats.totalDeaths
            .stat-card
                h3 Session Avg. Rage
                p.stat-value= stats.averageRage
            .stat-card
                h3 Session Go-To Phrase
                p.stat-value= stats.mostCommonPhrase

        //- Log a death form (only shown for active sessions)
        if session.is_active
            .admin-section-card
                h3 Log a New Death
                form.log-death-form(action=`/session/${session.id}/log-death`, method="POST")
                    .form-group
                        label Rage Level (1-10)
                        .rage-slider-container
                            input#rageSlider(type="range", min="1", max="10", value="5")
                            span#rageValue 5
                        input(type="hidden", name="rageLevel", value="5", required)

                    .form-group
                        label Rage Phrase
                        //- NEW: Conditionally display custom phrases or a prompt
                        if customPhrases && customPhrases.length > 0
                            .choice-grid.quick-phrase-grid
                                each phrase in customPhrases
                                    button.choice-btn.quick-phrase(type="button")= phrase
                        else
                            .quick-phrase-prompt
                                p You haven't set any custom quick phrases yet. #[a(href="/account") Create some here] for faster logging!

                        input#ragePhraseInput(type="text", name="ragePhrase", placeholder="Select a quick phrase or type your own", required)

                    .form-group.form-button-group
                        button.btn-rage(type="submit") Log Death


        //- Session logs table
        .admin-section-card
            h3 Session Logs
            if logs.length > 0
                .user-table-container
                    table.user-table
                        thead
                            tr
                                th Time
                                th Rage Level
                                th Rage Phrase
                        tbody
                            each log in logs
                                tr
                                    td(data-timestamp=log.created_at)
                                    td= log.rage_level
                                    td= log.rage_phrase
            else
                p No deaths have been logged for this session yet.

        //- Container for all action buttons
        .session-actions
            a.btn.btn-secondary(href="/dashboard") Return to Dashboard
            if session.is_active
                form(action=`/session/${session.id}/end`, method="POST", data-confirm=`Are you sure you want to end the session "${session.name}"? This will calculate your final achievements.`, data-confirm-title="End Session")
                    button.btn.btn-primary(type="submit") End Session & Check Achievements
            //- NEW: Delete button, styled differently and placed here
            form(action=`/session/${session.id}/delete`, method="POST", data-confirm=`Are you sure you want to permanently delete "${session.name}" and all its logs? This cannot be undone.`, data-confirm-title="Delete Session")
                button.btn.btn-danger(type="submit") Delete Session

block scripts
    script.
        document.addEventListener('DOMContentLoaded', () => {
            // Timestamp formatting
            document.querySelectorAll('[data-timestamp]').forEach(el => {
                const timestamp = el.getAttribute('data-timestamp');
                if (timestamp) {
                    el.textContent = new Date(timestamp).toLocaleString();
                }
            });

            // --- NEW: Rage Slider Logic ---
            const rageSlider = document.getElementById('rageSlider');
            const rageValueSpan = document.getElementById('rageValue');
            const hiddenRageInput = document.querySelector('input[name="rageLevel"]');

            if (rageSlider) {
                rageSlider.addEventListener('input', () => {
                    const value = rageSlider.value;
                    rageValueSpan.textContent = value;
                    hiddenRageInput.value = value;
                });
            }

            // --- NEW: Quick Phrase Logic ---
            const quickPhraseButtons = document.querySelectorAll('.quick-phrase');
            const ragePhraseInput = document.getElementById('ragePhraseInput');

            if (quickPhraseButtons.length > 0 && ragePhraseInput) {
                quickPhraseButtons.forEach(button => {
                    button.addEventListener('click', () => {
                        // Set the input value to the button's text
                        ragePhraseInput.value = button.textContent;

                        // Update selected styles
                        quickPhraseButtons.forEach(btn => btn.classList.remove('selected'));
                        button.classList.add('selected');
                    });
                });

                // If user types a custom phrase, deselect the buttons
                ragePhraseInput.addEventListener('input', () => {
                    quickPhraseButtons.forEach(btn => btn.classList.remove('selected'));
                });
            }
        });